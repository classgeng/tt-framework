server:
  port: 8081
  servlet:
    context-path: /demo

spring:
  servlet:
    multipart:
      # 设置 上传文件的大小
      max-file-size: 500MB
      # 设置 整个请求的大小
      max-request-size: 550MB

  datasource:
    url: jdbc:mysql://9.135.95.39:3306/tt_db?serverTimeZone=Asia/Shanghai
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: 123456

    # 德鲁伊监控面板配置
    druid:
      stat-view-servlet:
        # 设置白名单，不填则允许所有访问
        allow:
        url-pattern: /druid/*
        # 访问druid监控界面的用户名密码
        loginUsername: admin
        loginPassword: 123456
        enabled: true
      max-pool-prepared-statement-per-connection-size: 20
      filters: stat,wall
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

  #邮箱基本配置
  mail:
    #配置smtp服务主机地址
    host: smtp.qq.com
    #发送者邮箱
    username: 1791255334@@qq.com
    #配置密码,注意不是真正的密码，而是刚刚申请到的授权码
    password: dubymkgacdobchji
    #端口号465或587
    port: 587
    #默认的邮件编码为UTF-8
    default-encoding: UTF-8
    #其他参数
    properties:
      mail:
        #配置SSL 加密工厂
        smtp:
          ssl:
            #本地测试，先放开ssl
            enable: false
            required: false
          #开启debug模式，这样邮件发送过程的日志会在控制台打印出来，方便排查错误
        debug: true

  redis:
    host: 9.135.95.39
    port: 7379
    database: 0
    timeout: 3000
    jedis:
      pool:
        max-active: 29
        max-wait: -1
        max-idle: 10
        min-idle: 0

mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  # 这里根据自己项目的包修改，扫描到自己的*xml文件
  mapper-locations: classpath:mapper/*.xml

# xss 过滤配置
xss:
  enabled: true
  # 忽略不需要过滤的连接
  excludes:
    - /file/upload
    - /chuck-file/chuck
    - /druid
  # 忽略不需要做html转义的json属性值，多个属性用半角逗号分隔
  properties:

# 字典缓存SQL配置
cache:
  sql-map:
    default: SELECT * FROM `sys_dict`

# 文件上传服务存储地址
file:
  base-directory: F:\\tt-file

# 授权服务
auth-server:
  api-path: api
  user:
    expire: 3600
    prikey: ./jwt/pri.key
    pubKey: ./jwt/pub.key

auth-client:
  user:
    headerName: user-token
    pubKey: ./jwt/pub.key